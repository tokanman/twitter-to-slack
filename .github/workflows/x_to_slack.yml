name: X → Slack (multi-account)

on:
  schedule:
    - cron: "*/10 * * * *"   # Her 10 dakikada bir (UTC)
  workflow_dispatch:
  
jobs:
  run:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        handle: [replicate, runwayml, Alibaba_Wan, higgsfield_ai, veedstudio, Kling_ai, Hailuo_AI, OpenAI, fal, ComfyUI]
      max-parallel: 1   # ↩️ aynı anda tek job; unfurl atlamalarını azaltır

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps (Playwright + Firefox)
        run: |
          pip install -r requirements.txt
          python -m playwright install --with-deps firefox

      # --- state.json'ı her hesap için cache'le (tekrar gönderimi önlemek için) ---
      - name: Restore state cache
        id: cache
        uses: actions/cache@v4
        with:
          path: state-${{ matrix.handle }}.json
          key: state-${{ matrix.handle }}

      - name: Prepare state file for script
        run: |
          if [ -f "state-${{ matrix.handle }}.json" ]; then cp "state-${{ matrix.handle }}.json" state.json; fi
          if [ ! -f state.json ]; then echo '{"last_id": null}' > state.json; fi

      - name: Run scraper for each account
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          SLACK_CHANNEL_ID: ${{ secrets.SLACK_CHANNEL_ID }}
          X_HANDLE: ${{ matrix.handle }}
        run: python scrape_x_to_slack.py

      - name: Save state back to cache file
        run: |
          cp state.json "state-${{ matrix.handle }}.json"
