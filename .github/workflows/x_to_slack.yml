name: X → Slack (multi-account)

on:
  schedule:
    - cron: "0 */3 * * *"   # Her 3 saatte bir (UTC)
  workflow_dispatch:
    inputs:
      DEBUG:
        description: "Enable debug logs (1/0)"
        required: false
        default: "0"
      FORCE_POST:
        description: "Force post even if same id (1/0)"
        required: false
        default: "0"
      IGNORE_FIRST_POST:
        description: "On first run, save latest without posting (1/0)"
        required: false
        default: "0"

jobs:
  run:
    runs-on: ubuntu-latest

    # Aynı anda bir run çalışsın, çakışma olmasın (branch bazlı)
    concurrency:
      group: x-to-slack-${{ github.ref }}
      cancel-in-progress: false

    strategy:
      matrix:
        handle: [replicate, runwayml, Alibaba_Wan, higgsfield_ai, veedstudio, Kling_ai, Hailuo_AI, OpenAI, fal, ComfyUI, freepik]
      max-parallel: 1   # sırayla işlesin; unfurl atlaması azalır

    # state dosyalarını repo'ya yazmak için gerekli
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0            # rebase/pull için tam geçmiş
          persist-credentials: true # GITHUB_TOKEN ile push

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps (Playwright + Firefox)
        run: |
          pip install -r requirements.txt
          python -m playwright install --with-deps firefox

      # --- state'i repo'daki dosyadan yükle ---
      - name: Restore state file
        run: |
          if [ -f "state-${{ matrix.handle }}.json" ]; then cp "state-${{ matrix.handle }}.json" state.json; fi
          if [ ! -f state.json ]; then echo '{"last_id": null}' > state.json; fi

      - name: Run scraper for each account
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          SLACK_CHANNEL_ID: ${{ secrets.SLACK_CHANNEL_ID }}
          X_HANDLE: ${{ matrix.handle }}
          DEBUG: ${{ inputs.DEBUG || '0' }}
          FORCE_POST: ${{ inputs.FORCE_POST || '0' }}
          IGNORE_FIRST_POST: ${{ inputs.IGNORE_FIRST_POST || '0' }}
        run: python scrape_x_to_slack.py

      # --- state'i geri yaz ve güvenli şekilde commit/push et ---
      - name: Save & commit state
        env:
          BRANCH_NAME: ${{ github.ref_name }}
        run: |
          cp state.json "state-${{ matrix.handle }}.json"

          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # Başka job biraz önce push etmiş olabilir → en günceli çek
          git fetch origin "$BRANCH_NAME"
          git pull --rebase origin "$BRANCH_NAME" || true

          git add "state-${{ matrix.handle }}.json"
          git commit -m "[skip ci] save state for ${{ matrix.handle }}" || { echo "no changes"; exit 0; }

          # Doğru branche pushla
          git push origin HEAD:"$BRANCH_NAME"
